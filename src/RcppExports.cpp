// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// weekday_index
IntegerVector weekday_index(IntegerVector x);
RcppExport SEXP _ethiodate_weekday_index(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(weekday_index(x));
    return rcpp_result_gen;
END_RCPP
}
// eth_date_components
List eth_date_components(IntegerVector x);
RcppExport SEXP _ethiodate_eth_date_components(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(eth_date_components(x));
    return rcpp_result_gen;
END_RCPP
}
// eth_date_validate
IntegerVector eth_date_validate(IntegerVector year, IntegerVector month, IntegerVector day);
RcppExport SEXP _ethiodate_eth_date_validate(SEXP yearSEXP, SEXP monthSEXP, SEXP daySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type year(yearSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type month(monthSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type day(daySEXP);
    rcpp_result_gen = Rcpp::wrap(eth_date_validate(year, month, day));
    return rcpp_result_gen;
END_RCPP
}
// eth_leap_year
LogicalVector eth_leap_year(IntegerVector x);
RcppExport SEXP _ethiodate_eth_leap_year(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(eth_leap_year(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ethiodate_weekday_index", (DL_FUNC) &_ethiodate_weekday_index, 1},
    {"_ethiodate_eth_date_components", (DL_FUNC) &_ethiodate_eth_date_components, 1},
    {"_ethiodate_eth_date_validate", (DL_FUNC) &_ethiodate_eth_date_validate, 3},
    {"_ethiodate_eth_leap_year", (DL_FUNC) &_ethiodate_eth_leap_year, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_ethiodate(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
