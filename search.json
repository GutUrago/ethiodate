[{"path":"https://guturago.github.io/ethiodate/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Gutama Girja Urago Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://guturago.github.io/ethiodate/articles/ethiodate.html","id":"the-integer-logic-of-ethiodate","dir":"Articles","previous_headings":"","what":"The Integer Logic of ethiodate","title":"Introduction to ethiodate","text":"Just like R’s base Date class, ethdate class represents dates integers hood — specifically, number days since fixed origin date. Date uses Gregorian origin “1970-01-01”, ethdate uses Ethiopian equivalent date (.e., Ethiopian date corresponds Gregorian 1970-01-01) base. design choice aligns internal storage ethdate base R handles dates, ensuring consistency simplicity. Underneath, ethdate object just integer class attribute. means advantages using integer-based date arithmetic — speed, simplicity, compatibility — preserved. Adding subtracting number ethdate gives new date offset many days. Comparing two ethdate objects just boils integer comparisons. internal simplicity representation enables intuitive efficient date operations without complex calendar logic arithmetic level. architecture also makes ethdate class easily interoperable many parts R’s ecosystem. Since ’s based integers, ethdate objects can stored data frames, used keys joins, sorted naturally. convert Gregorian using .Date(), underlying integer interpreted correctly relative Gregorian calendar system. separation storage presentation keeps internals clean allowing rich formatting conversions needed. Overall, mimicking design base R’s Date class anchoring Ethiopian calendar, ethdate achieves elegance power: ’s lightweight, predictable, optimized calendar operations tailored Ethiopian context.","code":""},{"path":"https://guturago.github.io/ethiodate/articles/ethiodate.html","id":"key-functions","dir":"Articles","previous_headings":"","what":"Key Functions","title":"Introduction to ethiodate","text":"eth_date(): generic function casts vectors class ethdate class. eth_parse_date(): function parses date strings. eth_make_date(): function makes date year, month, day components date.","code":""},{"path":"https://guturago.github.io/ethiodate/articles/ethiodate.html","id":"a-quick-guide","dir":"Articles","previous_headings":"","what":"A Quick Guide","title":"Introduction to ethiodate","text":"Parsing Ethiopian Dates ethiodate ggplot2","code":""},{"path":"https://guturago.github.io/ethiodate/articles/ggplot.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"ethiodate and ggplot2","text":"ethiodate package provides modern infrastructure working Ethiopian calendar dates R. One powerful features ability use ethdate objects seamlessly within ggplot2 ecosystem data visualization. vignette walks advanced use ethiodate ggplot2, using built-cpieth dataset, includes monthly Consumer Price Index (CPI) data 2001 onward.","code":""},{"path":"https://guturago.github.io/ethiodate/articles/ggplot.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"ethiodate and ggplot2","text":"cpieth dataset contains: date: Gregorian Date object cpi: Numeric consumer price index Let’s convert date ethdate. addition, extract different components date like year, month, quarter","code":"library(ethiodate) library(ggplot2) library(dplyr) head(cpieth) #> # A tibble: 6 × 2 #>   date          cpi #>   <date>      <dbl> #> 1 2001-01-31  -7.46 #> 2 2001-02-28  -8.54 #> 3 2001-03-31 -14.0  #> 4 2001-04-30 -18.6  #> 5 2001-05-31 -18.5  #> 6 2001-06-30 -19.6 cpieth <- cpieth |>   mutate(edate = eth_date(date),          eyear = eth_year(edate),          emonth = eth_month(edate),          equarter = eth_quarter(edate))"},{"path":"https://guturago.github.io/ethiodate/articles/ggplot.html","id":"basic-cpi-time-series-plot","dir":"Articles","previous_headings":"","what":"Basic CPI Time Series Plot","title":"ethiodate and ggplot2","text":"Let’s visualize CPI trend overtime.  makes plot powerful ’re using theethdate object directly x-axis. ’s need manually convert relabel — just works. wait — can better. ’s ’re : Using scale_x_ethdate() customize year-based ticks Applying eth_labels(\"%Y\") format labels Ethiopian years Formatting CPI values percentages intuitive understanding Adding zero baseline geom_hline() visual reference  gives clean, elegant time series plot speaks directly Ethiopian policymakers economists.","code":"p <- ggplot(cpieth, aes(x = edate, y = cpi)) +   geom_line(color = \"steelblue\", linewidth = 1) +   labs(title = \"Consumer Price Index (CPI) Over Time\",        subtitle = \"Based on Ethiopian Calendar\",        x = \"Ethiopian Date\", y = \"CPI\") +   theme_bw()  p p +    scale_x_ethdate(breaks = eth_breaks(7),                   labels = eth_labels(\"%Y\")) +    scale_y_continuous(labels = scales::label_percent(scale = 1)) +    geom_hline(yintercept = 0, linewidth = 0.3, linetype = 2, color = \"tomato\")"},{"path":"https://guturago.github.io/ethiodate/articles/ggplot.html","id":"cpi-seasonality-by-month-and-year","dir":"Articles","previous_headings":"","what":"CPI Seasonality by Month and Year","title":"ethiodate and ggplot2","text":"Now, let’s understand seasonal CPI patterns across Ethiopian years:  see CPI values shift month--month, year--year — full support Ethiopian year. adding Amharic month labels eth_show(lang = \"amh\"), speak language audience — literally.","code":"p1 <- cpieth |>    filter(eyear > 2005 & eyear < 2015) |>    ggplot(aes(x = emonth, y = cpi, group = eyear, color = factor(eyear))) +   geom_line() +   scale_x_continuous(breaks = 1:13, labels = eth_show(lang = \"amh\")) +   scale_y_continuous(labels = scales::label_percent(scale = 1)) +   labs(title = \"CPI Seasonality by Ethiopian Year\",        x = \"Month\", y = \"CPI\", color = \"Year\") +   theme_bw() +    theme(axis.text.x = element_text(angle = 45, vjust = 0.9, hjust = 1, face = \"bold\"))  p1"},{"path":"https://guturago.github.io/ethiodate/articles/ggplot.html","id":"monthly-cpi-heatmap","dir":"Articles","previous_headings":"","what":"Monthly CPI Heatmap","title":"ethiodate and ggplot2","text":"Heatmaps provide quick visual summary monthly price patterns:  Heatmaps excellent revealing spikes, drops, anomalies. just one frame, can identify patterns like seasonal inflation economic shocks. Ethiopian months elegantly handled, color legend formatted percentage using scales::label_percent() — extra work needed.","code":"p2 <- cpieth |>    filter(eyear > 1993 & eyear < 2015) |>    ggplot(aes(x = factor(emonth), y = factor(eyear), fill = cpi)) +   geom_tile(color = \"white\") +   scale_fill_viridis_c(labels = scales::label_percent(scale = 1)) +   scale_x_discrete(labels = eth_show(\"%b\", \"amh\")) +   labs(title = \"Monthly CPI Heatmap\",        x = \"Ethiopian Month\", y = \"Ethiopian Year\", fill = \"CPI\") +   theme_bw() +    theme(axis.text.x = element_text(face = \"bold\"))  p2"},{"path":"https://guturago.github.io/ethiodate/articles/ggplot.html","id":"aggregated-cpi-by-quarter","dir":"Articles","previous_headings":"","what":"Aggregated CPI by Quarter","title":"ethiodate and ggplot2","text":"aggregation allows us zoom — highlighting macroeconomic trends, policy shifts, external shocks affect quarterly inflation. , ’re using eth_quarter() straight ethiodate — need hardcoded date logic.","code":"cpieth |>   filter(eyear > 2010) |>    mutate(equarter = eth_quarter(edate)) |>    group_by(eyear, equarter) |>   summarise(mean_cpi = mean(cpi), .groups = \"drop\") |>    ggplot(aes(x = interaction(eyear, equarter), y = mean_cpi)) +   geom_col(fill = \"darkorange\") +   labs(title = \"Quarterly Average CPI after 2010\",        x = \"Ethiopian Quarter\", y = \"Average CPI\") +   theme_bw() +   theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))"},{"path":"https://guturago.github.io/ethiodate/articles/ggplot.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"ethiodate and ggplot2","text":"ethiodate package makes simple intuitive visualize time series data using Ethiopian calendar system. Key features include: ethdate class integration ggplot2 Built-scale functions like scale_x_ethdate(), scale_y_ethdate(), eth_breaks(), eth_labels(). Accessor functions: eth_year(), eth_month(), eth_quarter(), eth_week() Built-dataset cpieth ready--use exploration features make ethiodate ideal tool researchers policymakers working Ethiopia.","code":""},{"path":"https://guturago.github.io/ethiodate/articles/parsing.html","id":"parsing-ethiopian-dates","dir":"Articles","previous_headings":"","what":"Parsing Ethiopian Dates","title":"Parse Ethiopian Dates","text":"Parsing involves converting external representation date (like text) internal ethdate object R can understand manipulate. ethiodate offers robust methods parsing dates character strings numeric values.","code":""},{"path":"https://guturago.github.io/ethiodate/articles/parsing.html","id":"from-character-strings","dir":"Articles","previous_headings":"Parsing Ethiopian Dates","what":"From Character Strings","title":"Parse Ethiopian Dates","text":"common scenario involves parsing dates provided text. eth_parse_date() function primary tool task. can handle standard date formats, “YYYY-MM-DD”, assuming represent dates Ethiopian calendar. eth_parse_date() vectorized, allowing parse multiple date strings single call. enables use tidyverse data manipulation pipelines.","code":"library(ethiodate) # Parse a single date string eth_parse_date(\"2015-01-01\") #> [1] \"2015-01-01\" # Parse a vector of date strings eth_dates <- c(\"2015-01-01\", \"2015-02-15\", \"2015-13-05\") eth_parse_date(eth_dates) #> [1] \"2015-01-01\" \"2015-02-15\" \"2015-13-05\""},{"path":"https://guturago.github.io/ethiodate/articles/parsing.html","id":"specifying-formats","dir":"Articles","previous_headings":"Parsing Ethiopian Dates > From Character Strings","what":"Specifying Formats","title":"Parse Ethiopian Dates","text":"Often, dates standard “YYYY-MM-DD” format. cases, must provide format argument eth_parse_date() precisely matches structure date strings. format argument uses syntax similar R’s base strptime() function. can consult documentation (?strptime) full list available format codes. Examples","code":"# Parsing dates in MM/DD/YYYY format x <- c(\"01/17/2017\", \"05/12/2017\") eth_parse_date(x, format = \"%m/%d/%Y\") #> [1] \"2017-01-17\" \"2017-05-12\""},{"path":"https://guturago.github.io/ethiodate/articles/parsing.html","id":"parsing-with-month-names","dir":"Articles","previous_headings":"Parsing Ethiopian Dates > From Character Strings","what":"Parsing with Month Names","title":"Parse Ethiopian Dates","text":"ethiodate also supports parsing dates include month names, English Amharic. lang argument allows specify language month names. %B: Full month name. %b: Abbreviated month name. Note: Ensure format string exactly matches pattern date strings successful parsing. discrepancy can lead NA values","code":"# Using full English month names eth_parse_date(\"Meskerem 25, 2017\", format = \"%B %d, %Y\") #> [1] \"2017-01-25\"  # Using full Amharic month names eth_parse_date(\"መስከረም 25, 2017\", format = \"%B %d, %Y\", lang = \"amh\") #> [1] \"2017-01-25\"  # Using abbreviated English month names eth_parse_date(\"Sep 25, 2017\", format = \"%b %d, %Y\", lang = \"en\") #> [1] \"2017-01-25\""},{"path":"https://guturago.github.io/ethiodate/articles/parsing.html","id":"from-numeric-values","dir":"Articles","previous_headings":"Parsing Ethiopian Dates","what":"From Numeric Values","title":"Parse Ethiopian Dates","text":"Internally, ethdate object represented numeric vector. vector stores number days elapsed since standard ‘Unix epoch’ origin used R, 1970-01-01 Gregorian Calendar (GC). corresponds 1962-04-23 Ethiopian Calendar (EC). Dates preceding origin represented negative numbers. underlying numeric nature allows ethdate objects integrate smoothly R’s base Date class functionalities. can construct ethdate object directly numeric values using eth_date() function. provide numeric vector, can specify custom origin date. origin provided, defaults standard 1962-04-23 EC.","code":"# Show the numeric representation of an Ethiopian date eth_parse_date(\"1962-04-23\") |> unclass() #> [1] 0  # Show the numeric representation of the Gregorian origin as.Date(\"1970-01-01\") |> unclass() #> [1] 0 # Create an ethdate object 7 days after today eth_date(7, origin = eth_today()) #> [1] \"2017-10-25\"  # Create an ethdate object 7 days before today eth_date(-7, origin = eth_today()) #> [1] \"2017-10-11\""},{"path":"https://guturago.github.io/ethiodate/articles/parsing.html","id":"from-components","dir":"Articles","previous_headings":"Parsing Ethiopian Dates","what":"From Components","title":"Parse Ethiopian Dates","text":"often convenient, especially field survey, record date components separate vectors. ethiodate solution create ethdate object individual components: year, month, day. eth_make_date() function facilitates .","code":"# Create a single date from components eth_make_date(2017, 1, 1) #> [1] \"2017-01-01\"  # Create multiple dates from component vectors y <- c(2012, 2015) m <- c(5, 9) d <- c(15, 19) eth_make_date(y, m, d) #> [1] \"2012-05-15\" \"2015-09-19\""},{"path":"https://guturago.github.io/ethiodate/articles/parsing.html","id":"handling-invalid-and-missing-values","dir":"Articles","previous_headings":"","what":"Handling Invalid and Missing Values","title":"Parse Ethiopian Dates","text":"ethiodate performs validation date creation parsing. checks provided day, month, year combinations valid within Ethiopian calendar rules. example, 13th month, Pagumē, 6 days leap year; otherwise, 5. attempt create invalid date, ethiodate return NAs issue warning message, ensuring data integrity. Missing values (NA) input result NA output.","code":"# 2011 is a leap year in EC, so Pagume 6 is valid eth_date(\"2011-13-06\") #> [1] \"2011-13-06\"  # 2012 is not a leap year in EC, so Pagume 6 is invalid eth_date(\"2012-13-06\") #> Warning in eth_date_validate(year = year, month = month, day = day): Detected 1 #> invalid date and coerced to NA. #> [1] NA  # Attempting to create a date with month 14 eth_make_date(2016, 14, 1) #> Warning in eth_date_validate(year = year, month = month, day = day): Detected 1 #> invalid date and coerced to NA. #> [1] NA"},{"path":"https://guturago.github.io/ethiodate/articles/parsing.html","id":"conversion","dir":"Articles","previous_headings":"","what":"Conversion","title":"Parse Ethiopian Dates","text":"Seamless conversion Ethiopian Gregorian calendars core feature ethiodate. Ethiopian (ethdate) can convert R’s standard Date objects (Gregorian) ethdate objects using eth_date() function. Gregorian (Date) Conversely, can convert ethdate objects back Gregorian Date objects using R’s standard .Date() function.","code":"# Convert a Gregorian date to Ethiopian gre_date <- as.Date(\"2025-01-15\") eth_date(gre_date) #> [1] \"2017-05-07\" # Convert an Ethiopian date (the origin) to Gregorian eth_dt <- eth_date(0) as.Date(eth_dt) #> [1] \"1970-01-01\""},{"path":"https://guturago.github.io/ethiodate/articles/parsing.html","id":"date-operations","dir":"Articles","previous_headings":"","what":"Date Operations","title":"Parse Ethiopian Dates","text":"ethdate objects support standard arithmetic operations, fundamental unit ‘days’. allows easy calculation durations future/past dates. can also perform comparisons:","code":"# Add 6 days to a date eth_date(\"2010-09-14\") + 6 #> [1] \"2010-09-20\"  # Subtract 6 days from a date eth_date(\"2010-09-14\") - 6 #> [1] \"2010-09-08\"  # Calculate the difference between two dates (in days) eth_date(\"2010-09-14\") - eth_date(\"2010-09-10\") #> Time difference of 4 days ed1 <- eth_date(\"2010-09-14\") ed2 <- eth_date(\"2010-09-10\")  ed1 > ed2 #> [1] TRUE  ed1 == ed2 + 4  #> [1] TRUE"},{"path":"https://guturago.github.io/ethiodate/articles/parsing.html","id":"formatting","dir":"Articles","previous_headings":"","what":"Formatting","title":"Parse Ethiopian Dates","text":"ethdate objects can formatted character strings using format() function, similar R’s base Date objects. can use standard strptime format codes customize output.","code":"# Format today's date in a custom string format(eth_today(), format = \"This document was updated on %B %d, %Y EC.\") #> [1] \"This document was updated on Sene 18, 2017 EC.\"  # Format with day of the week and year format(eth_today(), format = \"Today is %A, %B %d, %Y.\") #> [1] \"Today is Rebu, Sene 18, 2017.\"  # Format in Amharic format(eth_today(), format = \"%A، %B %d ቀን %Y ዓ.ም.\", lang = \"amh\") #> [1] \"ረቡዕ، ሰኔ 18 ቀን 2017 ዓ.ም.\""},{"path":"https://guturago.github.io/ethiodate/articles/parsing.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Parse Ethiopian Dates","text":"Working Ethiopian calendar dates R made significantly easier reliable ethiodate package. tools parsing diverse date formats, converting calendar systems, performing calculations, formatting output provide robust framework handling Ethiopian temporal data. converting string numeric inputs validated ethdate objects, ethiodate ensures date-related analyses operations accurate consistent. detailed information specific functions advanced features, please refer package’s help pages running ?eth_date, ?eth_parse_date, ?eth_make_date, exploring rest ethiodate documentation.","code":""},{"path":"https://guturago.github.io/ethiodate/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gutama Girja Urago. Author, maintainer, copyright holder.","code":""},{"path":"https://guturago.github.io/ethiodate/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Urago (2025). ethiodate: Working Ethiopian Dates R. R package version 0.2.0. doi:10.5281/zenodo.15262092. https://guturago.github.io/ethiodate/.","code":"@Manual{,   title = {ethiodate: Working with Ethiopian Dates in R},   author = {Gutama Girja Urago},   year = {2025},   note = {R package version 0.2.0},   doi = {10.5281/zenodo.15262092},   url = {https://guturago.github.io/ethiodate/}, }"},{"path":"https://guturago.github.io/ethiodate/index.html","id":"ethiodate-","dir":"","previous_headings":"","what":"Working with Ethiopian Dates","title":"Working with Ethiopian Dates","text":"package enables work Ethiopian dates R like base R Date objects. can seamlessly convert Gregorian dates, regardless way record . supports almost important parsing techniques used base R Date object. ever worked Date object, can Ethiopian dates. designed work smoothly tidyverse, including ggplot2, dplyr, tibble, lubridate, making ideal data manipulation pipelines. package ensures lightning-fast computations thanks Rcpp package enables integration high-performance C++ code. built-checks leap years 13th month (Pagume), makes package crucial.","code":""},{"path":"https://guturago.github.io/ethiodate/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features:","title":"Working with Ethiopian Dates","text":"Custom Date Object: can convert date recorded style custom ethdate object. Seamless Date Conversion: Effortlessly convert Ethiopian dates Gregorian dates precision. High-Speed Computation: Written C++ maximum efficiency. Date Arithmetic: Perform date arithmetic operations. Day-Based Units: Dates represented number days since 1963-04-23 EC (1970-01-01 GC) simplify conversion calendars. Integration ggplot2: Designed smoothly work ggplot2.","code":""},{"path":"https://guturago.github.io/ethiodate/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Working with Ethiopian Dates","text":"can install development version ethiodate package like :","code":"# Install the current version on CRAN install.packages(\"ethiodate\")  # Install a stable development version from GitHub (requires compilation) devtools::install_github(\"GutUrago/ethiodate\")"},{"path":"https://guturago.github.io/ethiodate/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Working with Ethiopian Dates","text":"package ever faced following conditions, ; recorded Ethiopian year, month days separate variable sure combination valid date. recorded Ethiopian date “dd-mm-yy”, “yy/mm/dd”, … etc, can’t perform operations beyond string operations. Ethiopian dates listed format want convert Gregorian dates. Gregorian dates object want obtain equivalent Ethiopian dates. want arithmetic operations Ethiopian dates. want build present nicely formatted plots time trends local context. Examples:","code":"library(ethiodate) library(dplyr)  data.frame(   eth_year = c(2000, 2007, 2015, 2020, 1950, 2030),   eth_month = c(8, 2, 13, 5, 7, 5),   eth_day = c(25, 12, 6, 8, 17, 30) ) |>    mutate(     eth_date = eth_make_date(eth_year, eth_month, eth_day),     gre_date = as.Date(eth_date),     eth_dayname = eth_weekday(eth_date, lang = \"en\"),      gre_dayname = weekdays(gre_date)    ) #>   eth_year eth_month eth_day   eth_date   gre_date eth_dayname gre_dayname #> 1     2000         8      25 2000-08-25 2008-05-03    Saturday    Saturday #> 2     2007         2      12 2007-02-12 2014-10-22   Wednesday   Wednesday #> 3     2015        13       6 2015-13-06 2023-09-11      Monday      Monday #> 4     2020         5       8 2020-05-08 2028-01-17      Monday      Monday #> 5     1950         7      17 1950-07-17 1958-03-26   Wednesday   Wednesday #> 6     2030         5      30 2030-05-30 2038-02-07      Sunday      Sunday"},{"path":"https://guturago.github.io/ethiodate/reference/cpieth.html","id":null,"dir":"Reference","previous_headings":"","what":"Monthly FAO Food Price Index 2001-2023 — cpieth","title":"Monthly FAO Food Price Index 2001-2023 — cpieth","text":"subset data FAO Food Price Index Ethiopia.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/cpieth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monthly FAO Food Price Index 2001-2023 — cpieth","text":"","code":"cpieth"},{"path":[]},{"path":"https://guturago.github.io/ethiodate/reference/cpieth.html","id":"cpieth","dir":"Reference","previous_headings":"","what":"cpieth","title":"Monthly FAO Food Price Index 2001-2023 — cpieth","text":"data frame 270 rows 2 columns: date Date (GC) cpi Consumer price index","code":""},{"path":"https://guturago.github.io/ethiodate/reference/cpieth.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Monthly FAO Food Price Index 2001-2023 — cpieth","text":"https://data360.worldbank.org/en/indicator/FAO_CP_23014?country=ETH","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Ethiopian Date Object — eth_date","title":"Create an Ethiopian Date Object — eth_date","text":"Convert object Ethiopian date.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Ethiopian Date Object — eth_date","text":"","code":"eth_date(x, ...)  # S3 method for class 'numeric' eth_date(x, origin = NULL, ...)  # S3 method for class 'character' eth_date(x, format = \"%Y-%m-%d\", lang = c(\"lat\", \"amh\", \"en\"), ...)  # S3 method for class 'Date' eth_date(x, ...)  # S3 method for class 'POSIXct' eth_date(x, ...)  # S3 method for class 'POSIXt' eth_date(x, ...)  # S3 method for class 'factor' eth_date(x, ...)"},{"path":"https://guturago.github.io/ethiodate/reference/eth_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Ethiopian Date Object — eth_date","text":"x numeric, character, Date, POSIXct POSIXt vector. ... arguments passed specific methods (see ). origin ethdate Date object, something can coerced eth_date(origin, ...). Default: Unix epoch \"1970-01-01\" GC (\"1962-04-23\" EC). format format argument character method parse date. lang language month names written, included x. Use \"lat\" Amharic month names written Latin alphabets, \"amh\" month names written Amharic alphabets, \"en\" English month names.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an Ethiopian Date Object — eth_date","text":"vector 'ethdate' object corresponding x.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an Ethiopian Date Object — eth_date","text":"eth_date() internally stores number days integer since Unix epoch \"1970-01-01\" GC (\"1962-04-23\" EC). Days \"1962-04-23\" EC represented negative integers. makes easy convert base Date objects. conversion numeric vectors assumes vector represents number days since origin (\"1962-04-23\" EC origin NULL). date objects, extracts underlying numeric values convert ethiodate object. convert POSIXct POSIXt, coerces objects base Date objects applies conversion. parse character vector, valid format must supplied. default \"%Y-%m-%d\". Please see details section strptime. Factors can also coerced ethdate internally converted character.","code":""},{"path":[]},{"path":"https://guturago.github.io/ethiodate/reference/eth_date.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an Ethiopian Date Object — eth_date","text":"Gutama Girja Urago","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an Ethiopian Date Object — eth_date","text":"","code":"eth_date(Sys.Date()) #> [1] \"2017-10-18\" eth_date(Sys.time()) #> [1] \"2017-10-18\"  x <- 7 eth_date(x) #> [1] \"1962-04-30\" eth_date(x, origin = Sys.Date()) #> [1] \"2017-10-25\" eth_date(x, origin = eth_today()) #> [1] \"2017-10-25\" eth_date(x, origin = \"2017-01-01\") #> [1] \"2017-01-08\" eth_date(x, origin = \"01-01-2017\", format = \"%d-%m-%Y\") #> [1] \"2017-01-08\"  s <- c(\"01/01/2013\", \"06/13/2011\") eth_date(s, format = \"%d/%m/%Y\") #> [1] \"2013-01-01\" \"2011-13-06\""},{"path":"https://guturago.github.io/ethiodate/reference/eth_make_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Ethiopian Date — eth_make_date","title":"Make Ethiopian Date — eth_make_date","text":"Make Ethiopian date year, month day components.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_make_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Ethiopian Date — eth_make_date","text":"","code":"eth_make_date(year, month, day)"},{"path":"https://guturago.github.io/ethiodate/reference/eth_make_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Ethiopian Date — eth_make_date","text":"year integer vector Ethiopian year. month integer vector Ethiopian month. day integer vector Ethiopian day.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_make_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Ethiopian Date — eth_make_date","text":"vector 'ethdate' object.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_make_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make Ethiopian Date — eth_make_date","text":"function makes Ethiopian date object three integer vectors equal length. validates date returns NA invalid dates. accounts leap years.","code":""},{"path":[]},{"path":"https://guturago.github.io/ethiodate/reference/eth_make_date.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make Ethiopian Date — eth_make_date","text":"Gutama Girja Urago","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_make_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Ethiopian Date — eth_make_date","text":"","code":"eth_make_date(2017, 01, 15) #> [1] \"2017-01-15\""},{"path":"https://guturago.github.io/ethiodate/reference/eth_parse_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Ethiopian Date — eth_parse_date","title":"Parse Ethiopian Date — eth_parse_date","text":"Parse Ethiopian date character vector non-digit separator.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_parse_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Ethiopian Date — eth_parse_date","text":"","code":"eth_parse_date(x, format = \"%Y-%m-%d\", lang = c(\"lat\", \"amh\", \"en\"))"},{"path":"https://guturago.github.io/ethiodate/reference/eth_parse_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Ethiopian Date — eth_parse_date","text":"x character vector. format format x composed. See strptime. lang language month names written, included x. Use \"lat\" Amharic month names written Latin alphabets, \"amh\" month names written Amharic alphabets, \"en\" English month names.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_parse_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Ethiopian Date — eth_parse_date","text":"vector  'ethdate' object.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_parse_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse Ethiopian Date — eth_parse_date","text":"x must include non-digit separator exactly three components date (year, month, day).","code":""},{"path":[]},{"path":"https://guturago.github.io/ethiodate/reference/eth_parse_date.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parse Ethiopian Date — eth_parse_date","text":"Gutama Girja Urago","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_parse_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse Ethiopian Date — eth_parse_date","text":"","code":"eth_parse_date(\"2017-01-01\") #> [1] \"2017-01-01\" s <- c(\"01/01/2013\", \"06/13/2011\") eth_parse_date(s, format = \"%d/%m/%Y\") #> [1] \"2013-01-01\" \"2011-13-06\""},{"path":"https://guturago.github.io/ethiodate/reference/eth_show.html","id":null,"dir":"Reference","previous_headings":"","what":"See Month or Day Names — eth_show","title":"See Month or Day Names — eth_show","text":"Small functions displays texts.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_show.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"See Month or Day Names — eth_show","text":"","code":"eth_show(x = c(\"%B\", \"%b\", \"%A\", \"%a\"), lang = c(\"lat\", \"amh\", \"en\"))  eth_today(...)  eth_now(...)"},{"path":"https://guturago.github.io/ethiodate/reference/eth_show.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"See Month or Day Names — eth_show","text":"x want see. lang language text. ... arguments passes format()","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_show.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"See Month or Day Names — eth_show","text":"Except eth_date(), returns ethdate object, functions return character vector.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_show.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"See Month or Day Names — eth_show","text":"eth_show() displays underlying month weekday names used eth_parse_date().","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_show.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"See Month or Day Names — eth_show","text":"Gutama Girja Urago","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_show.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"See Month or Day Names — eth_show","text":"","code":"eth_show() #>          1          2          3          4          5          6          7  #> \"Meskerem\"   \"Tikimt\"    \"Hidar\"   \"Tahsas\"      \"Tir\"  \"Yekatit\"  \"Megabit\"  #>          8          9         10         11         12         13  #>  \"Miyazya\"   \"Ginbot\"     \"Sene\"    \"Hamle\"   \"Nehase\"   \"Pagume\"  eth_show(\"%A\", \"amh\") #>      1      2      3      4      5      6      7  #>   \"ሰኞ\" \"ማክሰኞ\"  \"ረቡዕ\"  \"ሐሙስ\"  \"ዓርብ\"  \"ቅዳሜ\"  \"እሁድ\"  eth_today() #> [1] \"2017-10-18\" eth_now() #> [1] \"2017-10-18 01:53:33 PM\""},{"path":"https://guturago.github.io/ethiodate/reference/eth_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Ethiopian Date Components — eth_year","title":"Ethiopian Date Components — eth_year","text":"Small functions helps extract parts Ethiopian date objects.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ethiopian Date Components — eth_year","text":"","code":"eth_year(x)  eth_month(x)  eth_monthname(x, lang = c(\"lat\", \"amh\", \"en\"), abbreviate = FALSE)  eth_day(x)  eth_weekday(x, lang = c(\"lat\", \"amh\", \"en\"), abbreviate = FALSE)  eth_quarter(x)"},{"path":"https://guturago.github.io/ethiodate/reference/eth_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ethiopian Date Components — eth_year","text":"x vector Ethiopian date object lang language. 'lat' Amharic written Latin alphabets, 'amh' Amharic, 'en' English abbreviate want get abbreviated month weekday names?","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ethiopian Date Components — eth_year","text":"vector","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_year.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ethiopian Date Components — eth_year","text":"Gutama Girja Urago","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ethiopian Date Components — eth_year","text":"","code":"today <- eth_date(Sys.Date()) eth_year(today) #> [1] 2017 eth_month(today) #> [1] 10 eth_monthname(today) #> [1] \"Sene\" eth_day(today) #> [1] 18 eth_weekday(today) #> [1] \"Rebu\""},{"path":"https://guturago.github.io/ethiodate/reference/ethdate-ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting Ethiopian Date — ethdate-ggplot","title":"Plotting Ethiopian Date — ethdate-ggplot","text":"Helper functions plot ethdate object using ggplot2.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/ethdate-ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting Ethiopian Date — ethdate-ggplot","text":"","code":"scale_x_ethdate(breaks = eth_breaks(), labels = eth_labels(), ...)  scale_y_ethdate(breaks = eth_breaks(), labels = eth_labels(), ...)  eth_breaks(n = 5, pretty = TRUE)  eth_labels(format = \"%b %d, %Y\", lang = \"lat\")"},{"path":"https://guturago.github.io/ethiodate/reference/ethdate-ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting Ethiopian Date — ethdate-ggplot","text":"breaks numeric vector positions eth_breaks() function. labels character vector giving labels (must length breaks) eth_labels() function. ... arguments passed ggplot2::scale_x_continuous() ggplot2::scale_y_continuous(). n number breaks. pretty Logical; TRUE, use pretty() rounded breaks. format format ethdate. lang language month weekday names involved. Use \"lat\" Latin alphabets \"amh\" Amharic alphabets, \"en\" English names.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/ethdate-ggplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting Ethiopian Date — ethdate-ggplot","text":"Maps ethdate objects ggplot2 layers.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/ethdate-ggplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plotting Ethiopian Date — ethdate-ggplot","text":"eth_labels() eth_breaks() designed used scale_(x|y)_ethdate functions.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/ethdate-ggplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plotting Ethiopian Date — ethdate-ggplot","text":"Gutama Girja Urago","code":""},{"path":"https://guturago.github.io/ethiodate/reference/ethdate-ggplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting Ethiopian Date — ethdate-ggplot","text":"","code":"library(ggplot2)  cpieth[[\"ethdt\"]] <- eth_date(cpieth$date)  ggplot(cpieth, aes(ethdt, cpi)) +   geom_line() +   scale_x_ethdate(breaks = eth_breaks(6),                   labels = eth_labels(\"%Y\"),                   name = \"Year (EC)\") +   theme_bw()"},{"path":"https://guturago.github.io/ethiodate/reference/is_eth_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Utils — is_eth_date","title":"Utils — is_eth_date","text":"Small helper functions.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/is_eth_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utils — is_eth_date","text":"","code":"is_eth_date(x)  is_eth_leap(x)  # S3 method for class 'ethdate' as.Date(x, ...)  # S3 method for class 'ethdate' as.double(x, ...)  # S3 method for class 'ethdate' as.character(x, ...)  # S3 method for class 'ethdate' format(x, format = \"%Y-%m-%d\", lang = c(\"lat\", \"amh\", \"en\"), ...)"},{"path":"https://guturago.github.io/ethiodate/reference/is_eth_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utils — is_eth_date","text":"x ethdate numeric vector. ... arguments passed specific methods. format format character date. lang language.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/is_eth_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utils — is_eth_date","text":"is_eth_leap() returns boolean vector, .Date() returns Date object, .numeric() returns number date since 1970-01-01 GC (1962-04-23 EC), .character() returns formatted character date.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/is_eth_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utils — is_eth_date","text":"","code":"is_eth_leap(2011) #> [1] TRUE"},{"path":"https://guturago.github.io/ethiodate/news/index.html","id":"ethiodate-020","dir":"Changelog","previous_headings":"","what":"ethiodate 0.2.0","title":"ethiodate 0.2.0","text":"CRAN release: 2025-05-28","code":""},{"path":"https://guturago.github.io/ethiodate/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"ethiodate 0.2.0","text":"Added scale_x_ethdate() scale_y_ethdate() Added eth_breaks() eth_labels() Added eth_quarter()","code":""},{"path":"https://guturago.github.io/ethiodate/news/index.html","id":"enhancement-0-2-0","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"ethiodate 0.2.0","text":"Defined seq() cut() ethdate class.","code":""},{"path":"https://guturago.github.io/ethiodate/news/index.html","id":"ethiodate-010","dir":"Changelog","previous_headings":"","what":"ethiodate 0.1.0","title":"ethiodate 0.1.0","text":"CRAN release: 2025-05-15 Initial.","code":""}]
