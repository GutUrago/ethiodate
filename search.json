[{"path":"https://guturago.github.io/ethiodate/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Gutama Girja Urago Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://guturago.github.io/ethiodate/articles/ethiodate.html","id":"from-character-strings","dir":"Articles","previous_headings":"Parsing Ethiopian Dates","what":"From Character Strings","title":"Introduction to ethiodate","text":"can parse Ethiopian dates standard character representations like “2015-01-01” (Ethiopian calendar). Use eth_parse_date(): can also provide vector dates: parsing dates string, must provide correct formatting using format argument string must consistent pattern. argument accepts ISO 8601 formats, use ?strptime . Examples can also parse date contains month names specify exact format follows:","code":"library(ethiodate) eth_parse_date(\"2015-01-01\") #> [1] \"2015-01-01\" eth_dates <- c(\"2015-01-01\", \"2015-02-15\", \"2015-13-05\") eth_parse_date(eth_dates) #> [1] \"2015-01-01\" \"2015-02-15\" \"2015-13-05\" x <- c(\"01/17/2025\", \"05/12/2017\") eth_parse_date(x, format = \"%m/%d/%Y\") #> [1] \"2025-01-17\" \"2017-05-12\" eth_parse_date(\"Meskerem 25, 2017\", format = \"%B %d, %Y\") #> [1] \"2017-01-25\" eth_parse_date(\"መስከረም 25, 2017\", format = \"%B %d, %Y\", lang = \"amh\") #> [1] \"2017-01-25\" eth_parse_date(\"Sep 25, 2017\", format = \"%b %d, %Y\", lang = \"en\") #> [1] \"2017-01-25\""},{"path":"https://guturago.github.io/ethiodate/articles/ethiodate.html","id":"from-numeric","dir":"Articles","previous_headings":"Parsing Ethiopian Dates","what":"From Numeric","title":"Introduction to ethiodate","text":"ethate just numeric vector, hood, representing number days since 1970-01-01 GC (1962-04-12 EC). date origin represented negative values. makes seamlessly integrate features base R Date object. instance; , can supply number days custom origin construct Ethiopian date object. origin missing, default 1962-04-23 EC. See ?eth_date .","code":"# The same origin eth_parse_date(\"1962-04-23\") |> unclass() #> [1] 0 as.Date(\"1970-01-01\") |> unclass() #> [1] 0 eth_date(7, origin = eth_today()) #> [1] \"2017-09-05\""},{"path":"https://guturago.github.io/ethiodate/articles/ethiodate.html","id":"from-components","dir":"Articles","previous_headings":"Parsing Ethiopian Dates","what":"From Components","title":"Introduction to ethiodate","text":"Constructing ethdate object separate vector year, month day supported.","code":"eth_make_date(2017, 1, 1) #> [1] \"2017-01-01\"  y <- c(2022, 2025) m <- c(5, 9) d <- c(15, 19) eth_make_date(y, m, d) #> [1] \"2022-05-15\" \"2025-09-19\""},{"path":"https://guturago.github.io/ethiodate/articles/ethiodate.html","id":"invalid-and-missing-values","dir":"Articles","previous_headings":"","what":"Invalid and Missing Values","title":"Introduction to ethiodate","text":"ethiodate validates every values coercing ethdate object. instance, 13th month 6 days leap year. supply erroneous values, NA's along warnig message.","code":"# 2011 is leap year -> Correct eth_date(\"2011-13-6\") #> [1] \"2011-13-06\"  # Incorrect eth_date(\"2012-13-6\") #> Warning in eth_date_validate(year = year, month = month, day = day): Detected 1 #> invalid date and coerced to NA. #> [1] NA"},{"path":"https://guturago.github.io/ethiodate/articles/ethiodate.html","id":"conversion","dir":"Articles","previous_headings":"","what":"Conversion","title":"Introduction to ethiodate","text":"Conversion Ethiopian Gregorian calendar fully supported. Ethiopian Gregorian","code":"gre_date <- as.Date(\"2025-01-15\") eth_date(gre_date) #> [1] \"2017-05-07\" eth_dt <- eth_date(0) as.Date(eth_dt) #> [1] \"1970-01-01\""},{"path":"https://guturago.github.io/ethiodate/articles/ethiodate.html","id":"operations","dir":"Articles","previous_headings":"","what":"Operations","title":"Introduction to ethiodate","text":"date objects, ethdate supports date operations. unit arithmetric operations date.","code":"# Adding scalar days eth_date(\"2010-09-14\") + 6 #> [1] \"2010-09-20\"  # Subtraction eth_date(\"2010-09-14\") - 6 #> [1] \"2010-09-08\"  # Differences eth_date(\"2010-09-14\") - eth_date(\"2010-09-10\") #> [1] \"Time difference of 4 days\""},{"path":"https://guturago.github.io/ethiodate/articles/ethiodate.html","id":"formatting","dir":"Articles","previous_headings":"","what":"Formatting","title":"Introduction to ethiodate","text":"can format ethdate object like date objects.","code":"format(eth_today(), format = \"This documents was updated on %B %d, %Y EC.\") #> [1] \"This documents was updated on Miyazya 28, 2017 EC.\""},{"path":"https://guturago.github.io/ethiodate/articles/ethiodate.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Introduction to ethiodate","text":"Parsing Ethiopian dates crucial step analyzing data collected Ethiopian calendar system. ethiodate package provides consistent robust interface converting string representations Ethiopian dates properly classed objects ready analysis conversion. functionality, see ?eth_date, ?eth_parse_date, ?eth_make_date, rest package documentation.","code":""},{"path":"https://guturago.github.io/ethiodate/articles/parsing.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Parse Ethiopian Dates","text":"Ethiopian calendar widely used Ethiopia differs significantly Gregorian calendar. 13 months: 12 months 30 days 13th month (Pagumē) 5 6 days, depending year. ethiodate package provides tools parsing, converting, working Ethiopian dates R. vignette demonstrates parse Ethiopian dates strings numeric formats convert ethdate objects.","code":""},{"path":[]},{"path":"https://guturago.github.io/ethiodate/articles/parsing.html","id":"from-character-strings","dir":"Articles","previous_headings":"Parsing Ethiopian Dates","what":"From Character Strings","title":"Parse Ethiopian Dates","text":"can parse Ethiopian dates standard character representations like “2015-01-01” (Ethiopian calendar). Use eth_parse_date(): can also provide vector dates: parsing dates string, must provide correct formatting using format argument string must consistent pattern. argument accepts ISO 8601 formats, use ?strptime . Examples can also parse date contains month names specify exact format follows:","code":"library(ethiodate) eth_parse_date(\"2015-01-01\") #> [1] \"2015-01-01\" eth_dates <- c(\"2015-01-01\", \"2015-02-15\", \"2015-13-05\") eth_parse_date(eth_dates) #> [1] \"2015-01-01\" \"2015-02-15\" \"2015-13-05\" x <- c(\"01/17/2025\", \"05/12/2017\") eth_parse_date(x, format = \"%m/%d/%Y\") #> [1] \"2025-01-17\" \"2017-05-12\" eth_parse_date(\"Meskerem 25, 2017\", format = \"%B %d, %Y\") #> [1] \"2017-01-25\" eth_parse_date(\"መስከረም 25, 2017\", format = \"%B %d, %Y\", lang = \"amh\") #> [1] \"2017-01-25\" eth_parse_date(\"Sep 25, 2017\", format = \"%b %d, %Y\", lang = \"en\") #> [1] \"2017-01-25\""},{"path":"https://guturago.github.io/ethiodate/articles/parsing.html","id":"from-numeric","dir":"Articles","previous_headings":"Parsing Ethiopian Dates","what":"From Numeric","title":"Parse Ethiopian Dates","text":"ethate just numeric vector, hood, representing number days since 1970-01-01 GC (1962-04-12 EC). date origin represented negative values. makes seamlessly integrate features base R Date object. instance; , can supply number days custom origin construct Ethiopian date object. origin missing, default 1962-04-23 EC. See ?eth_date .","code":"# The same origin eth_parse_date(\"1962-04-23\") |> unclass() #> [1] 0 as.Date(\"1970-01-01\") |> unclass() #> [1] 0 eth_date(7, origin = eth_today()) #> [1] \"2017-09-05\""},{"path":"https://guturago.github.io/ethiodate/articles/parsing.html","id":"from-components","dir":"Articles","previous_headings":"Parsing Ethiopian Dates","what":"From Components","title":"Parse Ethiopian Dates","text":"Constructing ethdate object separate vector year, month day supported.","code":"eth_make_date(2017, 1, 1) #> [1] \"2017-01-01\"  y <- c(2022, 2025) m <- c(5, 9) d <- c(15, 19) eth_make_date(y, m, d) #> [1] \"2022-05-15\" \"2025-09-19\""},{"path":"https://guturago.github.io/ethiodate/articles/parsing.html","id":"invalid-and-missing-values","dir":"Articles","previous_headings":"","what":"Invalid and Missing Values","title":"Parse Ethiopian Dates","text":"ethiodate validates every values coercing ethdate object. instance, 13th month 6 days leap year. supply erroneous values, NA's along warnig message.","code":"# 2011 is leap year -> Correct eth_date(\"2011-13-6\") #> [1] \"2011-13-06\"  # Incorrect eth_date(\"2012-13-6\") #> Warning in eth_date_validate(year = year, month = month, day = day): Detected 1 #> invalid date and coerced to NA. #> [1] NA"},{"path":"https://guturago.github.io/ethiodate/articles/parsing.html","id":"conversion","dir":"Articles","previous_headings":"","what":"Conversion","title":"Parse Ethiopian Dates","text":"Conversion Ethiopian Gregorian calendar fully supported. Ethiopian Gregorian","code":"gre_date <- as.Date(\"2025-01-15\") eth_date(gre_date) #> [1] \"2017-05-07\" eth_dt <- eth_date(0) as.Date(eth_dt) #> [1] \"1970-01-01\""},{"path":"https://guturago.github.io/ethiodate/articles/parsing.html","id":"operations","dir":"Articles","previous_headings":"","what":"Operations","title":"Parse Ethiopian Dates","text":"date objects, ethdate supports date operations. unit arithmetric operations date.","code":"# Adding scalar days eth_date(\"2010-09-14\") + 6 #> [1] \"2010-09-20\"  # Subtraction eth_date(\"2010-09-14\") - 6 #> [1] \"2010-09-08\"  # Differences eth_date(\"2010-09-14\") - eth_date(\"2010-09-10\") #> [1] \"Time difference of 4 days\""},{"path":"https://guturago.github.io/ethiodate/articles/parsing.html","id":"formatting","dir":"Articles","previous_headings":"","what":"Formatting","title":"Parse Ethiopian Dates","text":"can format ethdate object like date objects.","code":"format(eth_today(), format = \"This documents was updated on %B %d, %Y EC.\") #> [1] \"This documents was updated on Miyazya 28, 2017 EC.\""},{"path":"https://guturago.github.io/ethiodate/articles/parsing.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Parse Ethiopian Dates","text":"Parsing Ethiopian dates crucial step analyzing data collected Ethiopian calendar system. ethiodate package provides consistent robust interface converting string representations Ethiopian dates properly classed objects ready analysis conversion. functionality, see ?eth_date, ?eth_parse_date, ?eth_make_date, rest package documentation.","code":""},{"path":"https://guturago.github.io/ethiodate/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gutama Girja Urago. Author, maintainer, copyright holder.","code":""},{"path":"https://guturago.github.io/ethiodate/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Urago GG (2025). ethiodate: Working Ethiopian Dates R. doi:10.5281/zenodo.15262092, R package version 0.1.0, https://guturago.github.io/ethiodate.","code":"@Manual{,   title = {ethiodate: Working with Ethiopian Dates in R},   author = {Gutama Girja Urago},   url = {https://guturago.github.io/ethiodate},   year = {2025},   doi = {10.5281/zenodo.15262092},   note = {R package version 0.1.0}, }"},{"path":"https://guturago.github.io/ethiodate/index.html","id":"ethiodate-","dir":"","previous_headings":"","what":"Working with Ethiopian Dates in R","title":"Working with Ethiopian Dates in R","text":"package enables work Ethiopian dates R like base R Date objects. can seamlessly convert Gregorian dates, regardless way record . supports almost important parsing techniques used base R Date object. ever worked Date object, can Ethiopian dates. package ensures lightning-fast computations thanks Rcpp package enables integration high-performance C++ code. built-checks leap years 13th month (Pagume), makes package crucial.","code":""},{"path":"https://guturago.github.io/ethiodate/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features:","title":"Working with Ethiopian Dates in R","text":"Custom Date Object: can convert date recorded style custom ethdate object. Seamless Date Conversion: Effortlessly convert Ethiopian dates Gregorian dates. High-Speed Computation: Written C++ maximum efficiency. Date Arithmetic: Perform date additions subtractions precision. Day-Based Units: Dates represented number days since 1963-04-23 EC (1970-01-01 GC) simplify conversion calendars.","code":""},{"path":"https://guturago.github.io/ethiodate/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Working with Ethiopian Dates in R","text":"can install development version ethiodate package like :","code":"# install.packages(\"devtools\") devtools::install_github(\"GutUrago/ethiodate\")"},{"path":"https://guturago.github.io/ethiodate/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Working with Ethiopian Dates in R","text":"package ever faced following conditions, ; recorded Ethiopian year, month days separate variable sure combination valid date? recorded Ethiopian date “dd-mm-yy”, “yy/mm/dd”, … etc, can’t perform operations beyond string operations? Ethiopian dates listed format want convert Gregorian dates? Gregorian dates object want obtain equivalent Ethiopian dates? want arithmetic operations Ethiopian dates? examples:","code":"library(ethiodate) library(dplyr)  data.frame(   eth_year = c(2000, 2007, 2015, 2020, 1950, 2030),   eth_month = c(8, 2, 13, 5, 7, 5),   eth_day = c(25, 12, 6, 8, 17, 30) ) |>    mutate(     eth_date = eth_make_date(eth_year, eth_month, eth_day), # Make `ethdate` object     gre_date = as.Date(eth_date), # Convert to Gregorian date     eth_dayname = eth_weekday(eth_date, lang = \"en\"), # Weekday name EC     gre_dayname = weekdays(gre_date), # Weekday name GC     eth_date2 = eth_date(gre_date), # From GC to EC     eth_str = glue::glue(\"{eth_year}/{eth_month}/{eth_day}\"), # Make string     eth_prsd = eth_parse_date(eth_str, format = \"%Y/%m/%d\"), # Parse string     eth_year2 = eth_year(eth_date), # Extract components     eth_month2 = eth_month(eth_date),     eth_day2 = eth_day(eth_date)   ) #>   eth_year eth_month eth_day   eth_date   gre_date eth_dayname gre_dayname #> 1     2000         8      25 2000-08-25 2008-05-03    Saturday    Saturday #> 2     2007         2      12 2007-02-12 2014-10-22   Wednesday   Wednesday #> 3     2015        13       6 2015-13-06 2023-09-11      Monday      Monday #> 4     2020         5       8 2020-05-08 2028-01-17      Monday      Monday #> 5     1950         7      17 1950-07-17 1958-03-26   Wednesday   Wednesday #> 6     2030         5      30 2030-05-30 2038-02-07      Sunday      Sunday #>    eth_date2   eth_str   eth_prsd eth_year2 eth_month2 eth_day2 #> 1 2000-08-25 2000/8/25 2000-08-25      2000          8       25 #> 2 2007-02-12 2007/2/12 2007-02-12      2007          2       12 #> 3 2015-13-06 2015/13/6 2015-13-06      2015         13        6 #> 4 2020-05-08  2020/5/8 2020-05-08      2020          5        8 #> 5 1950-07-17 1950/7/17 1950-07-17      1950          7       17 #> 6 2030-05-30 2030/5/30 2030-05-30      2030          5       30"},{"path":"https://guturago.github.io/ethiodate/reference/eth_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Ethiopian Date Object — eth_date","title":"Create an Ethiopian Date Object — eth_date","text":"Convert object Ethiopian date.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Ethiopian Date Object — eth_date","text":"","code":"eth_date(x, ...)  # S3 method for class 'numeric' eth_date(x, origin = NULL, ...)  # S3 method for class 'character' eth_date(x, format = \"%Y-%m-%d\", lang = c(\"lat\", \"amh\", \"en\"), ...)  # S3 method for class 'Date' eth_date(x, ...)  # S3 method for class 'POSIXct' eth_date(x, ...)  # S3 method for class 'POSIXt' eth_date(x, ...)"},{"path":"https://guturago.github.io/ethiodate/reference/eth_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Ethiopian Date Object — eth_date","text":"x numeric, character, Date, POSIXct POSIXt vector. ... arguments passed specific methods (see ). origin Date ethdate object, something can coerced eth_date(origin, ...). Default: Unix epoch \"1970-01-01\" GC (\"1962-04-23\" EC). format format argument character method parse date. lang language month names written, included x. Use \"amh\" month names written Amharic alphabets, \"lat\" Amharic month names written Latin alphabets, \"en\" English month names.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an Ethiopian Date Object — eth_date","text":"vector 'ethdate' objects corresponding x.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an Ethiopian Date Object — eth_date","text":"eth_date() internally stores number days since Unix epoch \"1970-01-01\" GC (\"1962-04-23\" EC). Days \"1962-04-23\" EC represented negative integers. makes easy convert base Date objects. conversion numeric vectors assumes vector represents number days since origin (\"1962-04-23\" EC origin NULL). date objects, extract underlying numeric values convert ethiodate object. convert POSIXct POSIXt, coerces objects base Date object , , apply conversion. parse character vector, valid format must supplied. default \"%Y-%m-%d\". please see details section strptime.","code":""},{"path":[]},{"path":"https://guturago.github.io/ethiodate/reference/eth_date.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an Ethiopian Date Object — eth_date","text":"Gutama Girja Urago","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an Ethiopian Date Object — eth_date","text":"","code":"eth_date(Sys.Date()) #> [1] \"2017-08-28\" eth_date(Sys.time()) #> [1] \"2017-08-28\"  x <- 7 eth_date(x) #> [1] \"1962-04-30\" eth_date(x, origin = Sys.Date()) #> [1] \"2017-09-05\" eth_date(x, origin = \"2017-01-01\") #> [1] \"2017-01-08\" eth_date(x, origin = \"01-01-2017\", format = \"%d-%m-%Y\") #> [1] \"2017-01-08\"  s <- c(\"01/01/2013\", \"06/13/2011\") eth_date(s, format = \"%d/%m/%Y\") #> [1] \"2013-01-01\" \"2011-13-06\""},{"path":"https://guturago.github.io/ethiodate/reference/eth_make_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Ethiopian Date — eth_make_date","title":"Make Ethiopian Date — eth_make_date","text":"Make Ethiopian date year, month day components.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_make_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Ethiopian Date — eth_make_date","text":"","code":"eth_make_date(year, month, day)"},{"path":"https://guturago.github.io/ethiodate/reference/eth_make_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Ethiopian Date — eth_make_date","text":"year integer vector Ethiopian year. month integer vector Ethiopian month. day integer vector Ethiopian day.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_make_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Ethiopian Date — eth_make_date","text":"vector 'ethdate' objects.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_make_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make Ethiopian Date — eth_make_date","text":"function makes Ethiopian date object three integer vectors equal length. validates date returns NA invalid dates. accounts leap years.","code":""},{"path":[]},{"path":"https://guturago.github.io/ethiodate/reference/eth_make_date.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make Ethiopian Date — eth_make_date","text":"Gutama Girja Urago","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_make_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Ethiopian Date — eth_make_date","text":"","code":"eth_make_date(2017, 01, 15) #> [1] \"2017-01-15\""},{"path":"https://guturago.github.io/ethiodate/reference/eth_parse_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Ethiopian Date — eth_parse_date","title":"Parse Ethiopian Date — eth_parse_date","text":"Parse Ethiopian date character vector non-digit separator.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_parse_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Ethiopian Date — eth_parse_date","text":"","code":"eth_parse_date(x, format = \"%Y-%m-%d\", lang = c(\"lat\", \"amh\", \"en\"))"},{"path":"https://guturago.github.io/ethiodate/reference/eth_parse_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Ethiopian Date — eth_parse_date","text":"x character vector. format format x composed. See strptime. lang language month names written, included x. Use \"amh\" month names written Amharic alphabets, \"lat\" Amharic month names written Latin alphabets, \"en\" English month names.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_parse_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Ethiopian Date — eth_parse_date","text":"vector 'ethdate' objects.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_parse_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse Ethiopian Date — eth_parse_date","text":"x must include non-digit separator.","code":""},{"path":[]},{"path":"https://guturago.github.io/ethiodate/reference/eth_parse_date.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parse Ethiopian Date — eth_parse_date","text":"Gutama Girja Urago","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_parse_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse Ethiopian Date — eth_parse_date","text":"","code":"eth_parse_date(\"2017-01-01\") #> [1] \"2017-01-01\" s <- c(\"01/01/2013\", \"06/13/2011\") eth_parse_date(s, format = \"%d/%m/%Y\") #> [1] \"2013-01-01\" \"2011-13-06\""},{"path":"https://guturago.github.io/ethiodate/reference/eth_show.html","id":null,"dir":"Reference","previous_headings":"","what":"See Month or Day Names — eth_show","title":"See Month or Day Names — eth_show","text":"Small functions displays texts.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_show.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"See Month or Day Names — eth_show","text":"","code":"eth_show(x = c(\"%B\", \"%b\", \"%A\", \"%a\"), lang = c(\"lat\", \"amh\", \"en\"))  eth_today(...)  eth_now(...)"},{"path":"https://guturago.github.io/ethiodate/reference/eth_show.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"See Month or Day Names — eth_show","text":"x want see. lang language text. ... arguments passes format()","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_show.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"See Month or Day Names — eth_show","text":"character vector.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_show.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"See Month or Day Names — eth_show","text":"Gutama Girja Urago","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_show.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"See Month or Day Names — eth_show","text":"","code":"eth_show() #>          1          2          3          4          5          6          7  #> \"Meskerem\"   \"Tikimt\"    \"Hidar\"   \"Tahsas\"      \"Tir\"  \"Yekatit\"  \"Megabit\"  #>          8          9         10         11         12         13  #>  \"Miyazya\"   \"Ginbot\"     \"Sene\"    \"Hamle\"   \"Nehase\"   \"Pagume\"  eth_show(\"%A\", \"amh\") #>      1      2      3      4      5      6      7  #>   \"ሰኞ\" \"ማክሰኞ\"  \"ረቡዕ\"  \"ሐሙስ\"  \"ዓርብ\"  \"ቅዳሜ\"  \"እሁድ\"  eth_today() #> [1] \"2017-08-28\" eth_now() #> [1] \"2017-08-28 01:56:13 PM\""},{"path":"https://guturago.github.io/ethiodate/reference/eth_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Ethiopian Date Components — eth_year","title":"Ethiopian Date Components — eth_year","text":"Small functions helps extract parts Ethiopian date objects.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ethiopian Date Components — eth_year","text":"","code":"eth_year(x)  eth_month(x)  eth_monthname(x, lang = c(\"lat\", \"amh\", \"en\"), abbreviate = FALSE)  eth_day(x)  eth_weekday(x, lang = c(\"lat\", \"amh\", \"en\"), abbreviate = FALSE)"},{"path":"https://guturago.github.io/ethiodate/reference/eth_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ethiopian Date Components — eth_year","text":"x vector Ethiopian date object lang language. 'amh' Amharic, 'lat' Amharic written Latin alphabets 'en' English abbreviate want get abbreviated month weekday names?","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ethiopian Date Components — eth_year","text":"vector","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_year.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ethiopian Date Components — eth_year","text":"Gutama Girja Urago","code":""},{"path":"https://guturago.github.io/ethiodate/reference/eth_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ethiopian Date Components — eth_year","text":"","code":"today <- eth_date(Sys.Date()) eth_year(today) #> [1] 2017 eth_month(today) #> [1] 8 eth_monthname(today) #> [1] \"Miyazya\" eth_day(today) #> [1] 28 eth_weekday(today) #> [1] \"Maksegno\""},{"path":"https://guturago.github.io/ethiodate/reference/is_eth_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Utils — is_eth_date","title":"Utils — is_eth_date","text":"Small helper functions.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/is_eth_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utils — is_eth_date","text":"","code":"is_eth_date(x)  is_eth_leap(x)  # S3 method for class 'ethdate' as.Date(x, ...)  # S3 method for class 'ethdate' as.double(x, ...)  # S3 method for class 'ethdate' as.character(x, ...)"},{"path":"https://guturago.github.io/ethiodate/reference/is_eth_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utils — is_eth_date","text":"x ethdate numeric vector. ... arguments passed specific methods.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/is_eth_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utils — is_eth_date","text":"is_eth_leap() returns boolean vector, .Date() returns Date object, .numeric() returns number date since 1970-01-01 GC (1962-04-23 EC), .character() returns formatted character date.","code":""},{"path":"https://guturago.github.io/ethiodate/reference/is_eth_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utils — is_eth_date","text":"","code":"is_eth_leap(2011) #> [1] TRUE"},{"path":"https://guturago.github.io/ethiodate/news/index.html","id":"ethiodate-010","dir":"Changelog","previous_headings":"","what":"ethiodate 0.1.0","title":"ethiodate 0.1.0","text":"Initial.","code":""}]
